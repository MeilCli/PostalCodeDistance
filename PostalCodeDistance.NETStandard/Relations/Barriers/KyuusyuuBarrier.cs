using PostalCodeDistance.NETStandard.Entities;

namespace PostalCodeDistance.NETStandard.Relations.Barriers
{
    public class KyuusyuuBarrier : IBarrier
    {
        private readonly IBarrier[] barriers = new IBarrier[]
        {
            new OoitaBarrier(),
            new KagosimaBarrier(),
            new NagasakiBarrier(),
            new HukuokaBarrier()
        };

        public bool WillIntersect(Point point1, Point point2)
        {
            foreach (var barrier in barriers)
            {
                if (barrier.WillIntersect(point1, point2))
                {
                    return true;
                }
            }

            return false;
        }

        private class OoitaBarrier : Barrier
        {
            protected override (double x, double y)[] GetBarrierPaths() => new (double, double)[]
            {
                (33.962184, 131.063479),
                (33.831865, 131.001507),
                (33.638220, 131.131741),
                (33.587766, 131.400863),
                (33.699616, 131.553352),
                (33.676984, 131.707902),
                (33.537283, 131.773431),
                (33.392539, 131.718205),
                (33.413182, 131.643609),
                (33.375332, 131.657622),
                (33.363974, 131.605693),
                (33.337121, 131.589620),
                (33.356745, 131.507605),
                (33.272366, 131.520588),
                (33.256859, 131.586941),
                (33.288111, 131.697441),
                (33.257789, 131.765567),
                (33.276229, 131.917991),
                (33.135572, 131.834182),
                (33.127774, 131.934655),
                (33.086309, 131.883193),
                (33.125722, 132.057673),
                (33.043182, 132.020914),
                (33.037019, 131.953279),
                (32.979890, 131.946418),
                (32.981534, 132.106684),
                (32.920382, 132.096536),
                (32.899855, 132.015322)
            };
        }

        private class KagosimaBarrier : Barrier
        {
            protected override (double x, double y)[] GetBarrierPaths() => new (double, double)[]
            {
                (31.298342, 131.403575),
                (31.451126, 131.120874),
                (31.361761, 131.052340),
                (31.275566, 131.185600),
                (30.968366, 130.638282),
                (31.088268, 130.645897),
                (31.177892, 130.745842),
                (31.334935, 130.778205),
                (31.468176, 130.685875),
                (31.532292, 130.677308),
                (31.563117, 130.588785),
                (31.604471, 130.589737),
                (31.653909, 130.674453),
                (31.634461, 130.720142),
                (31.572849, 130.729660),
                (31.585012, 130.768686),
                (31.677404, 130.798194),
                (31.712229, 130.657319),
                (31.592310, 130.584026),
                (31.438945, 130.549759),
                (31.320300, 130.601159),
                (31.258480, 130.694442),
                (31.153457, 130.625908),
                (31.155086, 130.496455),
                (31.231218, 130.485033),
                (31.243426, 130.206139),
                (31.468411, 130.073337),
                (31.430458, 130.254588),
                (31.566738, 130.323793),
                (31.789694, 130.127713)
            };
        }

        private class NagasakiBarrier : Barrier
        {
            protected override (double x, double y)[] GetBarrierPaths() => new (double, double)[]
            {
                (32.095705, 130.033793),
                (32.297886, 130.191152),
                (32.147339, 130.233169),
                (32.131294, 130.308141),
                (32.452355, 130.529762),
                (32.539909, 130.528114),
                (32.603089, 130.616268),
                (32.603089, 130.534705),
                (32.356365, 130.430898),
                (32.390213, 130.271987),
                (32.134998, 130.029427),
                (32.261390, 129.940549),
                (32.549032, 130.013379),
                (32.561518, 130.202861),
                (32.485018, 130.223846),
                (32.551113, 130.386170),
                (32.611442, 130.375060),
                (32.722112, 130.594168),
                (32.911453, 130.425759),
                (33.123122, 130.355398),
                (33.158782, 130.246770),
                (33.096239, 130.165299),
                (32.949270, 130.243067),
                (32.883469, 130.141845),
                (32.852364, 130.170854),
                (32.904199, 130.318983),
                (32.720569, 130.461557),
                (32.578698, 130.165299),
                (32.675382, 130.099876),
                (32.742375, 130.198628),
                (32.784416, 130.155424),
                (32.733031, 129.959770),
                (32.539162, 129.786953),
                (32.575057, 129.720296),
                (32.726380, 129.803837),
                (32.913625, 129.633489),
                (32.974226, 129.614973),
                (33.093657, 129.662759),
                (33.104515, 129.699791),
                (33.076592, 129.731885),
                (33.144833, 129.713369),
                (33.110719, 129.716455),
                (33.095725, 129.655969),
                (33.182550, 129.630047),
                (33.214054, 129.541170),
                (33.327066, 129.554131),
                (33.156718, 129.447355),
                (33.173768, 129.314039),
                (33.352847, 129.436245),
                (33.419328, 129.552279),
                (33.401296, 129.682509),
                (33.378106, 129.791754),
                (33.306239, 129.827788),
                (33.346251, 129.825067),
                (33.345493, 129.801668),
                (33.418370, 129.793083),
                (33.416812, 129.819968),
                (33.451401, 129.778520),
                (33.564464, 129.842163),
                (33.581183, 129.954643),
                (33.457471, 130.016956),
                (33.545981, 130.098808),
                (33.680113, 130.029102)
            };
        }

        private class HukuokaBarrier : Barrier
        {
            protected override (double x, double y)[] GetBarrierPaths() => new (double, double)[]
            {
                (33.701615, 130.205255),
                (33.594709, 130.291959),
                (33.619182, 130.396438),
                (33.657238, 130.392085),
                (33.638514, 130.355082),
                (33.662069, 130.289057),
                (33.715195, 130.285792),
                (33.663881, 130.333315),
                (33.765273, 130.463189),
                (33.787285, 130.426549),
                (33.923759, 130.544451)
            };
        }
    }
}
